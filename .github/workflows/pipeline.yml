name: Release Pipeline

on:
  push: {}

jobs:
  release-pipeline:
    name: Release Pipeline
    runs-on: windows-latest
    env:
      CERT_NAME: "pfxcert.pfx"
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Run Core Tests
        shell: pwsh
        run: dotnet test .\src\DevOpsDaysTasks.Core.Tests

      - name: Run Integration Tests
        shell: pwsh
        run: dotnet test .\src\DevOpsDaysTasks.IntegrationTests

      - name: Set Version Variables
        id: set-version
        shell: pwsh
        run: |
          $version = "1.0.${{ github.run_number }}"
          $versionName = "v$version-${{ github.ref_name }}"
          echo "version=$version" >> $env:GITHUB_OUTPUT
          echo "versionName=$versionName" >> $env:GITHUB_OUTPUT

      - name: Build Release
        shell: pwsh
        run: dotnet publish -c Release src\DevOpsDaysTasks.UI\ -o DevOpsDaysTasks /p:Version=${{ steps.set-version.outputs.version }} /p:VersionName=${{ steps.set-version.outputs.versionName }}

      - name: Create Templates Directory
        shell: pwsh
        run: New-Item -ItemType Directory -Path .\DevOpsDaysTasks\Templates -Force

      - name: Create Help Directory
        shell: pwsh
        run: New-Item -ItemType Directory -Path .\DevOpsDaysTasks\Help -Force

      - name: Copy Templates
        shell: pwsh
        run: Copy-Item -Path .\workshop_material\default-tasks.xml -Destination .\DevOpsDaysTasks\Templates\

      - name: Copy Help Documents
        shell: pwsh
        run: Copy-Item -Path .\workshop_material\Help.pdf -Destination .\DevOpsDaysTasks\Help\

      - name: Create Secret
        shell: pwsh
        run: |
          $base64 = "${{ secrets.SIGN_CERTIFICATE_PFX_BASE64 }}"
          $content = [System.Convert]::FromBase64String($base64)
          Set-Content ${{ env.CERT_NAME }} -Value $content -AsByteStream

      - name: Sign Application
        shell: pwsh
        run: .\scripts\sign.ps1 .\DevOpsDaysTasks\DevOpsDaysTasks.UI.exe -PfxFile  ${{ env.CERT_NAME }} -PfxPassword Password

      - name: Create ZIP Archive
        shell: pwsh
        run: Compress-Archive -Path .\DevOpsDaysTasks\* -DestinationPath .\DevOpsDaysTasks-${{ steps.set-version.outputs.version }}.zip


      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: DevOpsDaysTasks
          path: DevOpsDaysTasks
